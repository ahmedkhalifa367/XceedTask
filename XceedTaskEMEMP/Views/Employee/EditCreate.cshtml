@model XceedTaskEMEMP.Models.ViewModel.EmployeeViewModel

@using (Html.BeginForm())
{
    @Html.HiddenFor(a => a.Employee.empID)
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.empName, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Employee.empName, new { @class = "form-control", @autofocus = "autofocus", @maxlength = "255" })
        @Html.ValidationMessageFor(m => m.Employee.empName, null, new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.phoneNumber, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Employee.phoneNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.phoneNumber, null, new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.age, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Employee.age, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(m => m.Employee.age, null, new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Country.CountryName, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.Employee.CountryID,new SelectList (Model.Countries, "CountryID", "CountryName"), "Choose UR Location", new { @class = "form-control" })
    </div>
    <div>
        <input type="submit" value="@ViewBag.btnTitle" class="btn btn-primary" />
        @Html.ActionLink("Back To List", "index")
    </div>

}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");

    <script>
        function isNumber(evt) {
            var iKeyCode = (evt.which) ? evt.which : evt.keyCode
            if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
                return false;
            return true;
        }
    </script>
}
